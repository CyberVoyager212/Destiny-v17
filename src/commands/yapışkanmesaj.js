const emojis = require("../emoji.json"); // emoji.json iÃ§e aktarÄ±lÄ±r

exports.help = {
  name: "yapiskanmesaj",
  aliases: ["sticky", "sabit","yapÄ±ÅŸkanmesaj"],
  usage: "yapiskanmesaj <ekle|sil|list> [#kanal] [mesaj]",
  description: "Belirtilen kanala yapÄ±ÅŸkan mesaj ekler, siler veya listeler.",
  category: "AraÃ§lar",
  cooldown: 5,
  permissions: ["ADMINISTRATOR"],
};

exports.execute = async (client, message, args) => {
  if (!message.member.permissions.has("ADMINISTRATOR")) {
    return message.reply(
      `${emojis.bot.error} | **${message.member.displayName}**, bu komutu kullanmak iÃ§in \`YÃ¶netici\` yetkisine sahip olmalÄ±sÄ±n qwq~`
    );
  }

  const sub = args[0]?.toLowerCase();
  const db = client.db;

  if (sub === "ekle") {
    const channel = message.mentions.channels.first();
    if (!channel) {
      return message.reply(
        `${emojis.bot.error} | **${message.member.displayName}**, lÃ¼tfen mesajÄ±n gÃ¶nderileceÄŸi kanalÄ± etiketle~`
      );
    }
    const content = args.slice(2).join(" ");
    if (!content) {
      return message.reply(
        `${emojis.bot.error} | **${message.member.displayName}**, yapÄ±ÅŸkan mesaj iÃ§eriÄŸini yazmayÄ± unuttun qwq~`
      );
    }
    try {
      const sent = await channel.send(content);
      await db.set(`stickyMessage_${channel.id}`, {
        messageId: sent.id,
        content,
      });
      return message.reply(
        `${emojis.bot.succes} | **${message.member.displayName}**, yapÄ±ÅŸkan mesaj baÅŸarÄ±yla ${channel} kanalÄ±na ayarlandÄ±~ âœ¨`
      );
    } catch (err) {
      console.error("YapÄ±ÅŸkan mesaj gÃ¶nderilirken hata:", err);
      return message.reply(
        `${emojis.bot.error} | **${message.member.displayName}**, yapÄ±ÅŸkan mesaj ayarlanÄ±rken bir hata oluÅŸtu qwq~`
      );
    }
  } else if (sub === "sil") {
    const channel = message.mentions.channels.first();
    if (!channel) {
      return message.reply(
        `${emojis.bot.error} | **${message.member.displayName}**, lÃ¼tfen silinecek yapÄ±ÅŸkan mesajÄ±n bulunduÄŸu kanalÄ± etiketle~`
      );
    }
    const key = `stickyMessage_${channel.id}`;
    const data = await db.get(key);
    if (!data) {
      return message.reply(
        `${emojis.bot.error} | **${message.member.displayName}**, bu kanalda ayarlanmÄ±ÅŸ bir yapÄ±ÅŸkan mesaj yok qwq~`
      );
    }
    await db.delete(key);
    return message.reply(
      `${emojis.bot.succes} | **${message.member.displayName}**, ${channel} kanalÄ±ndaki yapÄ±ÅŸkan mesaj baÅŸarÄ±yla kaldÄ±rÄ±ldÄ±~ âœ¨`
    );
  } else if (sub === "list") {
    const all = await db.all();
    const sticky = all.filter((e) => e.id.startsWith("stickyMessage_"));
    if (!sticky.length) {
      return message.reply(
        `${emojis.bot.error} | **${message.member.displayName}**, ayarlanmÄ±ÅŸ yapÄ±ÅŸkan mesaj bulunamadÄ± qwq~`
      );
    }

    let txt = `ğŸ“Œ **AyarlanmÄ±ÅŸ YapÄ±ÅŸkan Mesajlar:**\n`;
    for (const entry of sticky) {
      const channelId = entry.id.split("_")[1];
      txt += `<#${channelId}>: ${entry.value.content}\n`;
    }
    return message.reply(`${emojis.bot.succes} | ${txt}`);
  } else {
    return message.reply(
      `${emojis.bot.error} | **${message.member.displayName}**, geÃ§ersiz alt komut! \`ekle\`, \`sil\` veya \`list\` kullanÄ±n qwq~`
    );
  }
};
